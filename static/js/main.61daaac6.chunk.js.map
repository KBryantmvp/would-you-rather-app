{"version":3,"sources":["utils/_DATA.js","utils/api.js","actions/users.js","actions/questions.js","actions/shared.js","components/QuestionItem.js","components/Dashboard.js","components/QuestionDetails.js","components/NewQuestion.js","components/LeaderItem.js","components/LeaderBoard.js","actions/authedUser.js","components/MyNav.js","components/Login.js","components/NoMatch.js","components/PrivateRoute.js","components/App.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","reducers/questions.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","8xf0y6ziyjabvozdd253nd","6ni6ok3ym7mf1p33lnez","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","formatQuestion","_ref","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","getInitialData","Promise","all","res","rej","setTimeout","Object","objectSpread","then","_ref2","slicedToArray","saveQuestionAnswer","info","authedUser","qid","answer","defineProperty","concat","_saveQuestionAnswer","saveQuestion","question","formattedQuestion","_saveQuestion","RECEIVE_USERS","RECEIVE_QUESTIONS","VOTE_QUESTION","NEW_QUESTION","handleVoteQuestion","dispatch","type","voteQuestion","catch","e","console","warn","alert","log","handleNewQuestion","showLoading","newQuestion","hideLoading","handleInitialData","receiveUsers","receiveQuestions","QuestionItem","react_default","a","createElement","react","className","alt","src","this","props","questionItem","Link","to","Component","connect","Dashboard","state","showAnsweredQs","displayUnansQs","_this","setState","displayAnsQs","calculateUnanswered","filter","sortedAnswerIds","indexOf","Jumbotron","onClick","ListGroup","questionIds","map","ListGroupItem","key","components_QuestionItem","keys","sort","b","QuestionDetails","value","handleChange","target","handleSubmit","preventDefault","_this$props","_this$props2","hasAnswered","answerVoted","Redirect","votesOptionOne","length","votesOptionTwo","totalVotes","onSubmit","checked","onChange","toFixed","match","params","NewQuestion","toHome","_this$state","_this$state2","placeholder","disabled","LeaderItem","scoreUser","answeredQuestions","questionsCreated","totalScore","LeaderBoard","scoreUsers","componentClass","user","index","components_LeaderItem","reduce","usersAcc","SET_AUTHED_USER","UNSET_AUTHED_USER","unsetAuthedUser","MyNav","Navbar","Nav","bsStyle","lib","exact","activeClassName","NavItem","pullRight","signOut","split","Login","userId","usersArr","from","location","pathname","DropdownButton","title","MenuItem","onSelect","handleSetAuthedUser","NoMatch","component","rest","objectWithoutProperties","Route","assign","render","App","build_default","components_MyNav","Switch","path","loggedIn","components_Dashboard","components_PrivateRoute","withRouter","combineReducers","arguments","undefined","action","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","es","BrowserRouter","basename","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.61daaac6.chunk.js","sourcesContent":["let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    // avatarURL: 'https://avatars.dicebear.com/v2/female/1.svg',\n    avatarURL: 'https://api.adorable.io/avatars/120/i.png',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    // avatarURL: 'https://avatars.dicebear.com/v2/male/2.svg',\n    avatarURL: 'https://api.adorable.io/avatars/120/test@adorable.png',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'https://api.adorable.io/avatars/120/avatar.png',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n      \n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import {\n  _getUsers,\n  _getQuestions,\n  _saveQuestion,\n  _saveQuestionAnswer\n} from './_DATA.js'\n\nexport function getInitialData () {\n  return Promise.all([\n    _getUsers(),\n    _getQuestions()\n  ]).then(([users, questions]) => ({\n    users,\n    questions\n  }))\n}\n\nexport function saveQuestionAnswer (info) {\n  return _saveQuestionAnswer(info)\n}\n\nexport function saveQuestion (question) {\n  return _saveQuestion(question)\n}","export const RECEIVE_USERS = 'RECEIVE_USERS'\n\nexport function receiveUsers (users) {\n  return {\n    type: RECEIVE_USERS,\n    users\n  }\n}","import { saveQuestionAnswer, saveQuestion } from \"../utils/api\";\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\nexport const VOTE_QUESTION = 'VOTE_QUESTION'\nexport const NEW_QUESTION = 'NEW_QUESTION'\n\nexport function receiveQuestions (questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  }\n}\n\n// Function to update the store with the question's vote\nfunction voteQuestion ({ authedUser, qid, answer }) {\n  return {\n    type: VOTE_QUESTION,\n    authedUser,\n    qid,\n    answer\n  }\n}\n\n// Async function to vote question and save the answer in the database\nexport function handleVoteQuestion (info) {\n  return (dispatch) => {\n    dispatch(voteQuestion(info))\n\n    return saveQuestionAnswer(info)\n      .catch((e) => {\n        console.warn('Error in handleVoteQuestion: ', e)\n        alert('There was an error voting the question. Try again')\n      })\n      .then(res => console.log('res', res))\n  }\n}\n\n// Function to update the store with the new question submitted\nfunction newQuestion (question) {\n  return {\n    type: NEW_QUESTION,\n    question\n  }\n}\n\n// Async function to update the database with the new question submitted\nexport function handleNewQuestion (question) {\n  return (dispatch) => {\n    dispatch(showLoading())\n    return saveQuestion(question)\n      .catch((e) => {\n        console.warn('Error in handleNewQuestion: ', e)\n        alert('There was an error submitting the question. Try again')\n      })\n        .then((question) => dispatch(newQuestion(question)))\n        .then(() => dispatch(hideLoading()))\n  }\n}","import { getInitialData } from '../utils/api'\nimport { receiveUsers } from './users'\nimport { receiveQuestions } from './questions'\nimport { showLoading, hideLoading } from 'react-redux-loading'\n\nexport function handleInitialData () {\n  return (dispatch) => {\n    dispatch(showLoading())\n    return getInitialData()\n      .then(({ users, questions }) => {\n        dispatch(receiveUsers(users))\n        dispatch(receiveQuestions(questions))\n        dispatch(hideLoading())\n      })\n  }\n}","import React, { Component, Fragment } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\n// Component that display each question with the different info\n// required to be displayed for that particular question\nclass QuestionItem extends Component {\n  render() {\n    return (\n      <Fragment >\n        <div className='avatar' alt='avatar-image'>\n          <img src={this.props.avatarURL}>\n          </img>\n        </div>\n        <div className='question-text'>\n          <strong>Would you rather...</strong>\n          <div className='options'>\n            <span>{this.props.questionItem.optionOne.text}</span>\n            <br/>\n            <span>{this.props.questionItem.optionTwo.text}</span>\n          </div>\n          <Link to={`/question/${this.props.id}`}>\n            VIEW QUESTION\n          </Link >\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nfunction mapStateToProps({ questions, users }, {id}) {\n  const questionItem = questions[id]\n  const avatarURL = users[questionItem.author].avatarURL\n\n  return {\n    id,\n    questionItem,\n    avatarURL\n  }\n}\n\nexport default connect(mapStateToProps)(QuestionItem)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport QuestionItem from './QuestionItem';\nimport { Jumbotron, ListGroup, ListGroupItem } from 'react-bootstrap'\n\n// Main view displayed when user logs in.\n// It shows a list of unanswered and answered questions\n\nclass Dashboard extends Component {\n  state = {\n    showAnsweredQs: false\n  }\n\n  displayUnansQs = () => {\n    this.setState({\n      showAnsweredQs: false\n    })\n  }\n\n  displayAnsQs = () => {\n    this.setState({\n      showAnsweredQs: true\n    })\n  }\n\n  // function to extract unanswered questions from all possible questions\n  calculateUnanswered = (questions) => {\n    var unansweredQ = questions.filter((e) => (\n      this.props.sortedAnswerIds.indexOf(e) < 0\n    ))\n    return unansweredQ\n  }\n\n  render() {\n    const { showAnsweredQs } = this.state\n\n    return (\n      <Jumbotron className='center'>\n        <div>\n          <button type='button' onClick={this.displayUnansQs}>Unanswered Questions</button>\n          <button type='button' onClick={this.displayAnsQs}>Answered Questions</button>\n        </div>\n        <ListGroup className='question-list'>\n          {showAnsweredQs === false\n            ? this.calculateUnanswered(this.props.questionIds).map((id) => (\n              <ListGroupItem key={id} className='question-item'>\n                <QuestionItem id={id} />\n              </ListGroupItem>\n              ))\n            : this.props.sortedAnswerIds.map((id) => (\n              <ListGroupItem key={id} className='question-item'>\n                <QuestionItem id={id} />\n              </ListGroupItem>\n              ))\n          }\n        </ListGroup>\n      </Jumbotron>\n    )\n  }\n}\n\nfunction mapStateToProps ({ authedUser, questions, users }) {\n  // Get all answer IDs from the logged in user's answer object\n  // and sort by timestamp\n  let answeredIds = Object.keys(users[authedUser].answers)\n  let sortedAnswerIds = answeredIds.sort((a,b) => questions[b].timestamp - questions[a].timestamp)\n\n  return {\n    authedUser,\n    sortedAnswerIds,\n    questionIds: Object.keys(questions)\n      .sort((a,b) => questions[b].timestamp - questions[a].timestamp)\n  }\n}\n\nexport default connect(mapStateToProps)(Dashboard)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { handleVoteQuestion } from '../actions/questions';\nimport { Redirect } from 'react-router-dom'\nimport { Jumbotron } from 'react-bootstrap'\n\nclass QuestionDetails extends Component {\n  state = {\n    value: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const { authedUser, qid, dispatch } = this.props\n    const answer = this.state.value\n\n    dispatch(handleVoteQuestion({ authedUser, qid, answer }))\n  }\n\n  render() {\n    const { avatarURL, question, hasAnswered, answerVoted } = this.props\n\n    // If user tries to manually enter an address with a question ID in the URL that does not exist\n    // a 404 PAGE NOT FOUND page will be displayed\n    if (!question) {\n      return <Redirect to='/404-page-not-found'/>\n    }\n    const optionOne = question.optionOne.text\n    const optionTwo = question.optionTwo.text\n    const votesOptionOne = question.optionOne.votes.length\n    const votesOptionTwo = question.optionTwo.votes.length\n    const totalVotes = votesOptionOne + votesOptionTwo\n\n    return (\n      <Jumbotron className='center'>\n        <h2>WOULD YOU RATHER...</h2>\n        <div className='question-item'>\n          <div className='avatar'>\n            <img src={avatarURL} alt='avatar-image'>\n            </img>\n          </div>\n          {/* If logged in user has not answered the question that is trying to view,\n            * the two options to vote will be displayed. Otherwise, he will be able\n            * to see the results with his previously submitted vote clearly marked */}\n          {hasAnswered === false\n            ? <div className='options'>\n                <form onSubmit={this.handleSubmit}>\n                  <label>\n                    <input type='radio' checked={this.state.value === 'optionOne'} value='optionOne' onChange={this.handleChange}/>\n                    {optionOne}\n                  </label>\n                  <label>\n                    <input type='radio' checked={this.state.value === 'optionTwo'} value='optionTwo' onChange={this.handleChange}/>\n                    {optionTwo}\n                  </label>\n                  <input type='submit' value='Submit' />\n                </form>\n              </div>\n            : <div className='results'>\n                <h3>RESULTS:</h3>\n                <div className='results-answer'>\n                  <div className={'optionOne ' + (answerVoted === 'optionOne' ? 'answer' : '')}>\n                    <h4>{optionOne}</h4>\n                    <span>{votesOptionOne} out of {totalVotes} votes ({(votesOptionOne/totalVotes*100).toFixed(1)}%)</span>\n                  </div>\n                  <div className={'optionTwo ' + (answerVoted === 'optionTwo' ? 'answer' : '')}>\n                    <h4>{optionTwo}</h4>\n                    <span>{votesOptionTwo} out of {totalVotes} votes ({(votesOptionTwo/totalVotes*100).toFixed(1)}%)</span>\n                  </div>\n                </div>\n              </div>\n          }\n        </div>\n      </Jumbotron>\n    )\n  }\n}\n\nfunction mapStateToProps ({ authedUser, questions, users }, props) {\n  // qid extracted from the URL\n  const qid = props.match.params.id\n\n  // Retrieve the question from the redux store that matches the qid in the URL\n  const question = questions[qid]\n  const avatarURL = question ? users[question.author].avatarURL : null\n  let answerVoted = ''\n  \n  if (question && question.optionOne.votes.indexOf(authedUser) >= 0)\n    answerVoted = 'optionOne'\n\n  if (question && question.optionTwo.votes.indexOf(authedUser) >= 0)\n    answerVoted = 'optionTwo'\n\n  return {\n    qid,\n    authedUser,\n    question,\n    avatarURL,\n    answerVoted,\n    hasAnswered: users[authedUser].answers[qid]\n      ? true\n      : false\n  }\n}\n\nexport default connect(mapStateToProps)(QuestionDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { handleNewQuestion } from '../actions/questions';\nimport { Redirect } from 'react-router-dom'\nimport { Jumbotron } from 'react-bootstrap'\n\nclass NewQuestion extends Component {\n  state = {\n    optionOneText: '',\n    optionTwoText: '',\n    toHome: false\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  // Function that saves the new question in the store with the\n  // two possible answers and the user that creates the new question.\n  // Once it is saved, the user will be redirected to the Home page '/'\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { author, dispatch } = this.props\n    const { optionOneText, optionTwoText } = this.state\n\n    dispatch(handleNewQuestion({ optionOneText, optionTwoText, author }))\n\n    this.setState({\n      optionOneText: '',\n      optionTwoText: '',\n      toHome: true\n    })\n  }\n\n  render () {\n    const { optionOneText, optionTwoText, toHome } = this.state\n\n    // Redirect the user to the Home view after submitting a new question\n    if (toHome === true) {\n      return <Redirect to='/' />\n    }\n\n    return (\n      <Jumbotron className='center'>\n        <h2>CREATE NEW QUESTION</h2>\n        <div className='new-question'>\n          <h4>Would you rather...</h4>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type='text'\n              name='optionOneText'\n              placeholder='Enter option one...'\n              onChange={this.handleChange}\n              value={this.state.optionOneText}>\n            </input><br/>\n            <span>Or...</span> <br/>\n            <input\n              type='text'\n              name='optionTwoText'\n              placeholder='Enter option two...'\n              onChange={this.handleChange}\n              value={this.state.optionTwoText}>\n              </input><br/>\n            <input\n              type='submit'\n              value='Submit'\n              disabled={!(optionOneText && optionTwoText)}>\n            </input>\n          </form>\n        </div>\n      </Jumbotron>\n    )\n  }\n}\n\nfunction mapStateToProps ({ authedUser }) {\n  return {\n    author: authedUser\n  }\n}\n\nexport default connect(mapStateToProps)(NewQuestion)","import React, { Component, Fragment } from 'react'\n\n// View that displays each particular user and his info in the leader board\nclass LeaderItem extends Component {\n  render () {\n    const { scoreUser } = this.props\n    const answeredQuestions = scoreUser.answeredQuestions\n    const questionsCreated = scoreUser.questionsCreated\n    const totalScore = scoreUser.totalScore\n\n    return (\n      <Fragment >\n        <div className='avatar'>\n        <img src={scoreUser.avatarURL} alt='avatar-image'>\n        </img>\n        </div>\n        <div className='user-info'>\n          <h3>{scoreUser.name}</h3>\n          <span>Answered questions: {answeredQuestions}</span> <br/>\n          <span>Created questions: {questionsCreated}</span>\n        </div>\n        <div className='score'>\n          <strong>Score:</strong> <br/>\n          <span>{totalScore}</span>\n        </div>\n      </Fragment>\n    )\n  }\n}\n\nexport default LeaderItem","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport LeaderItem from './LeaderItem'\nimport { Jumbotron, ListGroup, ListGroupItem } from 'react-bootstrap'\n\n// View that displays the list of users and their score\nclass LeaderBoard extends Component {\n  render () {\n    const { scoreUsers } = this.props\n\n    return (\n      <Jumbotron className='center' >\n        <ListGroup className='leader-list' componentClass='ul'>\n          {scoreUsers.sort((a,b) => b.totalScore - a.totalScore)\n            .map((user, index) => (\n              <ListGroupItem key={index} className='leader-item'>\n                <LeaderItem scoreUser={user} />\n              </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Jumbotron>\n    )\n  }\n}\n\nfunction mapStateToProps({ users }) {\n  const usersArr = Object.keys(users).reduce((usersAcc, user) => {\n    return usersAcc.concat(users[user])\n  },[])\n\n  // Create a new array that will store objects of users with new properties\n  const scoreUsers = usersArr.map(user => ({\n    id: user.id,\n    name: user.name,\n    avatarURL: user.avatarURL,\n    answeredQuestions: Object.keys(user.answers).length,\n    questionsCreated: user.questions.length,\n    totalScore: Object.keys(user.answers).length + user.questions.length\n  }))\n\n  return {\n    scoreUsers,\n  }\n}\n\nexport default connect(mapStateToProps)(LeaderBoard)","export const SET_AUTHED_USER = 'SET_AUTHED_USER'\nexport const UNSET_AUTHED_USER = 'UNSET_AUTHED_USER'\n\nexport function setAuthedUser (id) {\n  return {\n    type: SET_AUTHED_USER,\n    id\n  }\n}\n\nexport function unsetAuthedUser () {\n  return {\n    type: SET_AUTHED_USER,\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { unsetAuthedUser } from '../actions/authedUser';\nimport { Nav, Navbar, NavItem } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\n// Component that renders the navigation bar at the top of the App\n// and allows to go to the different App views\nclass MyNav extends Component {\n  signOut (e) {\n    const { dispatch } = this.props\n\n    dispatch(unsetAuthedUser)\n\n  }\n  render () {\n    const { authedUser } = this.props\n\n    return (\n      <Navbar >\n        <Nav bsStyle='tabs' >\n          <LinkContainer to='/' exact activeClassName='active'>\n            <NavItem>\n              Home\n            </NavItem>\n          </LinkContainer>\n          <LinkContainer to='/add' activeClassName='active'>\n            <NavItem>\n              New Question\n            </NavItem>\n          </LinkContainer>\n          <LinkContainer to='/leaderboard' activeClassName='active'>\n            <NavItem>\n              Leader Board\n            </NavItem>\n          </LinkContainer>\n        </Nav>\n        <Nav bsStyle='tabs' pullRight>\n          {authedUser !== null\n            ? <LinkContainer to='/login' onClick={this.signOut}>\n                <NavItem>\n                  Welcome, {authedUser}! Sign Out\n                </NavItem>\n              </LinkContainer>\n            : <NavItem>Please sign in</NavItem>\n          }\n        </Nav>\n      </Navbar>\n    )\n  }\n}\n\nfunction mapStateToProps ({ authedUser, users }) {\n  return {\n    authedUser: authedUser\n      ? users[authedUser].name.split(' ')[0]\n      : null\n  }\n}\n\nexport default connect(mapStateToProps)(MyNav)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Jumbotron, DropdownButton, MenuItem } from 'react-bootstrap'\nimport { setAuthedUser } from '../actions/authedUser';\nimport { Redirect } from 'react-router-dom'\n\nclass Login extends Component {\n\n  handleSetAuthedUser(userId) {\n    const { dispatch } = this.props\n    dispatch(setAuthedUser(userId))\n  }\n\n  render () {\n    const { authedUser, usersArr } = this.props\n\n    // Store the value of the path that the user was trying to access before being\n    // redirected to Login view.\n    const { from } = this.props.location.state || { from: { pathname: '/' }}\n\n    // Redirect the user to the previously attempted view after log in.\n    // If no other view was attempted to access, user will be redirected to Home page '/'\n    if (authedUser !== null) {\n      return <Redirect to={from} />\n    }\n\n    return (\n      <Jumbotron className='center'>\n        <div className='login-box'>\n          <h1>Would You Rather App</h1>\n          <h4>Sign in</h4>\n          <DropdownButton\n            title='Select User'\n            id='dropdown-basic'\n          >\n            {usersArr.map((user, id) => (\n              <MenuItem key={id} onSelect={() => this.handleSetAuthedUser(user.id)}>{user.name}</MenuItem>\n            ))}\n          </DropdownButton>\n        </div>\n      </Jumbotron>\n    )\n  }\n}\n\nfunction mapStateToProps ({ authedUser, users }) {\n  return {\n    authedUser,\n    usersArr: Object.keys(users).reduce((usersAcc, user) => (\n      usersAcc.concat(users[user])\n    ),[])\n  }\n}\n\nexport default connect(mapStateToProps)(Login)","import React, { Component } from 'react'\n\nclass NoMatch extends Component {\n  render () {\n    return (\n      <div>\n        <h1>404 PAGE NOT FOUND</h1>\n      </div>\n    )\n  }\n}\n\nexport default NoMatch","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n// User will be allowed to navigate to private routes if it has logged in already.\n// Otherwise, the /login page will be displayed\nfunction PrivateRoute ({ component: Component, ...rest }) {\n  return (\n    <Route {...rest} render={props => (\n      rest.authedUser\n        ? <Component {...props} />\n        : <Redirect to={{\n            pathname: '/login',\n            state: { from: props.location }\n        }} />\n    )}/>\n  )\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    authedUser\n  }\n}\n\nexport default connect(mapStateToProps)(PrivateRoute)","import React, { Component } from 'react';\nimport { Switch, Route, withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { handleInitialData } from '../actions/shared'\nimport Dashboard from './Dashboard';\nimport QuestionDetails from './QuestionDetails';\nimport NewQuestion from './NewQuestion';\nimport LeaderBoard from './LeaderBoard';\nimport MyNav from './MyNav'\nimport LoadingBar from 'react-redux-loading'\nimport Login from './Login';\nimport NoMatch from './NoMatch';\nimport PrivateRoute from './PrivateRoute'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialData())\n  }\n  render() {\n    return (\n      <div className='container'>\n        <LoadingBar />\n        <MyNav />\n        <Switch>\n          <Route path='/' exact render={props => (\n            this.props.loggedIn ? <Dashboard/> : <Redirect to='/login'/>\n          )}/>\n          {/* Only allow to go to private routes if user is logged in */}\n          <Route path='/login' component={Login} />\n          <PrivateRoute path='/add' exact component={NewQuestion} />\n          <PrivateRoute path='/leaderboard' exact component={LeaderBoard} />\n          <PrivateRoute path='/question/:id' component={QuestionDetails}/>\n          <Route component={NoMatch} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps ({ authedUser }) {\n  return {\n    loggedIn: authedUser !== null\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(App))","import { combineReducers } from 'redux'\nimport authedUser from './authedUser'\nimport users from './users'\nimport questions from './questions'\nimport { loadingBarReducer } from 'react-redux-loading'\n\nexport default combineReducers({\n  authedUser,\n  users,\n  questions,\n  loadingBar: loadingBarReducer\n})","import { SET_AUTHED_USER, UNSET_AUTHED_USER } from '../actions/authedUser'\n\nexport default function authedUser(state = null, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER :\n      return action.id\n    case UNSET_AUTHED_USER :\n      return null\n    default :\n      return state\n  }\n}","import { RECEIVE_USERS } from '../actions/users'\nimport { VOTE_QUESTION } from '../actions/questions'\nimport { NEW_QUESTION } from '../actions/questions'\n\nexport default function users (state = {}, action) {\n  switch(action.type) {\n    case RECEIVE_USERS :\n      return {\n        ...state,\n        ...action.users\n      }\n    // Update the 'answers' property of the User object wit the new\n    // question ID and the answer selected\n    case VOTE_QUESTION :\n      return {\n        ...state,\n        [action.authedUser]: {\n          ...state[action.authedUser],\n          answers: {\n            ...state[action.authedUser].answers,\n            [action.qid]: action.answer\n          }\n        }\n      }\n    // Update the 'questions' property in User object wit the new question created\n    case NEW_QUESTION :\n      return {\n        ...state,\n        [action.question.author]: {\n          ...state[action.question.author],\n          questions: state[action.question.author].questions.concat(action.question.id)\n        }\n      }\n    default :\n      return state\n  }\n}","import { RECEIVE_QUESTIONS } from '../actions/questions'\nimport { VOTE_QUESTION } from '../actions/questions'\nimport { NEW_QUESTION } from '../actions/questions'\n\nexport default function questions (state = {}, action) {\n  switch(action.type) {\n    case RECEIVE_QUESTIONS :\n      return {\n        ...state,\n        ...action.questions\n      }\n    // Update the 'votes' property of the specified option selected (optionOne or optionTwo)\n    case VOTE_QUESTION :\n      return {\n        ...state,\n        [action.qid]: {\n          ...state[action.qid],\n          [action.answer]: {\n            ...state[action.qid][action.answer],\n            votes: state[action.qid][action.answer].votes.concat([action.authedUser])\n          }\n        }\n      }\n    case NEW_QUESTION :\n      return {\n        ...state,\n        [action.question.id]: action.question\n      }\n    default :\n      return state\n  }\n}","const logger = (store) => (next) => (action) => {\n  console.group(action.type)\n    console.log('The action: ', action)\n    const returnValue = next(action)\n    console.log('The new state: ', store.getState())\n  console.groupEnd()\n  return returnValue\n}\n\nexport default logger","import thunk from 'redux-thunk'\nimport logger from './logger'\nimport { applyMiddleware } from 'redux'\n\nexport default applyMiddleware(\n  thunk,\n  logger\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/would-you-rather-app\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}